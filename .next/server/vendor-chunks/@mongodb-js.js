"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mongodb-js";
exports.ids = ["vendor-chunks/@mongodb-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js":
/*!********************************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/code-points-data.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nexports[\"default\"] = (0, zlib_1.gunzipSync)(Buffer.from(\"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\", \"base64\")); //# sourceMappingURL=code-points-data.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9jb2RlLXBvaW50cy1kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCSCxrQkFBZSxHQUFHLENBQUMsR0FBR0UsT0FBT0csVUFBVSxFQUFFQyxPQUFPQyxJQUFJLENBQUMsNG5GQUE0bkYsWUFDanJGLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYmxvZy8uL25vZGVfbW9kdWxlcy9AbW9uZ29kYi1qcy9zYXNscHJlcC9kaXN0L2NvZGUtcG9pbnRzLWRhdGEuanM/MmNmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHpsaWJfMSA9IHJlcXVpcmUoXCJ6bGliXCIpO1xuZXhwb3J0cy5kZWZhdWx0ID0gKDAsIHpsaWJfMS5ndW56aXBTeW5jKShCdWZmZXIuZnJvbSgnSDRzSUFBQUFBQUFDQSszZFRZZ2NXUjBBOEZmVG5la1E0N2FDa0J4aVpwWVY4Umh3WVFNN2JBL2tzb0xnU1JEMElPU2llUEFrTHJvd3ZXU0Y0Q2tIRVc4NTZNbFRRSEE5UktaMVpKT0RzRWNWY1RPeWh4VUViWGRYdHBQcDFQTlZWMzlVejRjekV5YVRWT2IzRzZhN1h0V3JyL2Rldlg0OS8rcWVrRzJHbzdBYTJqSEd5b3pHK0RtcnppMm1QL3hiL3pNaExJK1dsUm0yYnl1Ym0yaDBpdlZpN0JZenVzVmp1Tmt0MWw5dUZXc3V0V0w4T1A0cnpWOUtlWGRzS3gxSEZoYlNjNnZJRzBmS0JaMTRVTmZMRlM2RlJyR1J0WGg5OFp2cGhML3g0dUxWL0lPemFhdC92bGlrdi9UaXhhdnhSOFBRaXRmUHBLTmJmZlhTd2d0cjhmVjA3R1grTDE5Njd1cndnNVcwL3QwTFYzN3kvb1dGbFF0WDhwaW5nN3JlWEUzTFQ2ODByOXlQS3luLzNWbjY0U3dkVnM2bS9LTjB5SHJwOUQrUnZYc3FwZTZNU2lhNW1INkxTb2cvL1hxLysrTzc0WVZUamZERldLMlZJdU5TZW1pUHBwcGhjVllleXpjdWRLcUZNaXE2Y3MzdlZrcnpsY25FMG14ZVoxSmYyWlhzU3ZrOFRtUlpXWWRwYWx5ZHhkNWJjOGVVa3Qxd2xFYnRxVFZMcjhYUUxGcEtNYitkcHI5U2JTT3Q0b3pUZ1hVcTgrSWhtOGNUdDBzaHRDdlQ2ZHdhbzZzeFBmNXlkbVUyMDgvWjB5SDhJWnRsdlppM2U1ZkcxMnluM1BMU2RQdm5RN3ZzSzlyeHlLcHFldnpGWkdWZnUzWUhlenZibmJ2aXQ5WGRtNWZHYmYvTVo3UHV1TnJUakxKbmFvZkg3Z20waCtWS1UvZy90ZFVvY3JlcjNjTzR5T2N1eWNHb3lMcmJhNlRhK2xybG5rWjVudHZXQ3JmVjM5d0xUdU5nOVF2c3ZIYjM3UDhCQUdDUDBlTlRPSDVzemYxNTRKbW5OUUljbjdiK0Z6aXlBZlg0ZVdubitDNkxtNE0wbWozMXVia1ZpaURWNFdMdnM1NnFONTR4R1MzSFdFUjVzdTZuUXRadWJsOXRjWS80YXRicjllNWtXZXdldy9nMmE4ZmR5MllhYTk3K3BnUUFBQUFBQUlCSHR0K2RZbVd3YU4vYnlJNWcvOVBZVmZNdmI0WXZ2RHBPTEp4dkZndWVQOVZiUFhoOC95Q1pWaVp4TllBVGFlam1EUUFBQUFDZ2ZqSi8zUVVBNEpEM1B4MUluVCs1UHRRQ0FBQUFBQUFBQUtEMnhQOEJBQUFBQUFBQW9QN0Uvd0VBQUFBQUFBQ2cvc1QvQVFBQUFBQUFBS0QreFA4QkFBQUFBQUFBb1A3RS93RUFBQUFBQUFDZy9zVC9BUUFBQUFBQUFLRCt4UDhCQUFBQUFBQUFvUDdFL3dFQUFBQUFBQUNnL3NUL0FRQUFBQUFBQUtEK3hQOEJBQUFBQUFBQW9QNkc2K2toVkNnU0FBQUFBQUFBQUtpZFlRakxZVmZOY1BTeUFFK2RoUXNudkFBcTU5L1ZIQUFBQUFBQUFPQ0ptdjhFL3c0SGlMcWYzbld1V0NCMXBlMGVzZy9wVDNzS2QrbTRYamhwRnBaSDMvMVRIVGNVNmNmUkxuckhmM1pOUFpzK2JmOXJ3UHVJVVBZQVdiK2ovWnkwRWFBeEFBQUFBQUR3clBKMUlNQmVudTZlYTk5TSswVy8xN3dDQUFBQUFBQUFuR1JMbThvQTRKblFVQVFBQUFBQUFBQUFVSHZpL3dBQUFBQUFBQUJRZitML0FBQUFBQUFBQUZCLzR2OEFBQUFBQUFBQVVIL2kvd0FBQUFBQUFBQlFmK0wvQUFBQUFBQUFBRkIvNHY4QUFBQUFBQUFBVUgvaS93QUFBQUFBQUFCUWYrTC9BQUFBQUFBQUFGQi80djhBQUFBQUFBQUFVSC9pL3dBQUFBQUFBQUJRZitML0FBQUFBQUFBQUZCL2pkWDBFQ3NVQ1FBQUFBQUFBQURVVGlNQ0FBQUFBQUFBQUhVM1ZBUUFBQUFBQUFBQVVIOGhMTmYxdXdzV2JoVC91V0J6VUV4L2VpMU54YzAwMVZxcm5OMnd1UmpDSzNHNEh1Tmd0dUpvU1ZqMTdROVF5QlFCQUFBQUFBQUFITUtwdUo0LytPdGM1TDJYWmk4ZEpsUS9MQ1BYaGM0a2VKOVVJOXVGcmUzckRmWTl1b1haUFFCRkhMMzRIU1dXbThzeDVySDgzZDk2N0lmWk1SWkhIRy8yUWk4TUZuYnNjWG5obnpIZWk1Tk5EOFAyYlcyT1QzRzh2RmVlYkJIYno5ZEdFZjVqRHQrZks0L21UdmUxYm53bmRzTkw5MittRS83NXhocy95ejY1RWQvWmJQMjlTUDk2b3h2Q0R4cnhjamozMzNSMjYyL2Q2WDZ0RzY2bFl5L3ovK3J0TW44M25IdnY5bmZPdi9kdzQrcHZzcENsNHY3KzFucGEvbkh2dGJTdmpTSi9tZjc5L1Z1TEM3TjAzTGlXOG8vU01VOGxkTytqUE91bDFPVlEzdlZ3SytUWnFCTEN0My9SWHZ2ZVM3ZWFEMEw4WXlockplVi9jQzBXR1RkRDFoemxDbzJIOTh2eks5YSs5NjNWN3FSVlRlYU5hK1pHcFdwK042MmpTbU9ldEpEOGRuNjdmQjRuOG56Y2hHN240K29zMnRjZ3pMV1VRVmc3MHJ0YThsRTducVc3SVc3MTB2N2VEc1YxRjdlNjQzM25qWWZkOWo5R2wyS0l2ZXB0TWVQVmFtT1hRdWhYTzV0VWs2UHYra2lQWDQzVDcvM1lldkR5NE1OK0hMdzhDSFBYNk9xT093S2U3M3owK3BuZjNydlQ2cFg3NmovU1VVNy8zVWpxWDVyN1pXN1BkWlU4VnEyaWQrMjlQcGhkaDNuMVRxcC90MGFYYVdWT1Buc0ZHcmUrd2FSZHBLZi9USys3ZmlYM2JPV2x1VmVKZzc3QUFQTkR3cjM3ZndBQTJHUDArQlNPSHdjbjYvMjMxZ2h3ZlByNlgrRElCdFRqNTgyZDQ3czhMRDN4TWVZa3R0K1lIWEhlNlhRdUg5UDROdStIM2N0bUdtdmUvcVlFQUFBQUFBQ0FSN2JmbldKbHNHZ1NOTm9NNTR0UFoyM0VJNHZZelBZMS9menExdWQvR1AvMDFqang4UDJ0WXNHN0R6cnJCNC92SHlTVHo1WUIrbjhBQUFBQWdKckovWEVYQUlESEVmLzJ5WFVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWdHZEFCQUFBQUFBQUFBRHFicWdJQUFBQUFBQUFBS0QyaHY4RFdLNzlVQmhvQmdBPScsICdiYXNlNjQnKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb2RlLXBvaW50cy1kYXRhLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInpsaWJfMSIsInJlcXVpcmUiLCJkZWZhdWx0IiwiZ3VuemlwU3luYyIsIkJ1ZmZlciIsImZyb20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/index.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("\nconst getCodePoint = (character)=>character.codePointAt(0);\nconst first = (x)=>x[0];\nconst last = (x)=>x[x.length - 1];\nfunction toCodePoints(input) {\n    const codepoints = [];\n    const size = input.length;\n    for(let i = 0; i < size; i += 1){\n        const before = input.charCodeAt(i);\n        if (before >= 0xd800 && before <= 0xdbff && size > i + 1) {\n            const next = input.charCodeAt(i + 1);\n            if (next >= 0xdc00 && next <= 0xdfff) {\n                codepoints.push((before - 0xd800) * 0x400 + next - 0xdc00 + 0x10000);\n                i += 1;\n                continue;\n            }\n        }\n        codepoints.push(before);\n    }\n    return codepoints;\n}\nfunction saslprep({ unassigned_code_points, commonly_mapped_to_nothing, non_ASCII_space_characters, prohibited_characters, bidirectional_r_al, bidirectional_l }, input, opts = {}) {\n    const mapping2space = non_ASCII_space_characters;\n    const mapping2nothing = commonly_mapped_to_nothing;\n    if (typeof input !== \"string\") {\n        throw new TypeError(\"Expected string.\");\n    }\n    if (input.length === 0) {\n        return \"\";\n    }\n    const mapped_input = toCodePoints(input).map((character)=>mapping2space.get(character) ? 0x20 : character).filter((character)=>!mapping2nothing.get(character));\n    const normalized_input = String.fromCodePoint.apply(null, mapped_input).normalize(\"NFKC\");\n    const normalized_map = toCodePoints(normalized_input);\n    const hasProhibited = normalized_map.some((character)=>prohibited_characters.get(character));\n    if (hasProhibited) {\n        throw new Error(\"Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3\");\n    }\n    if (opts.allowUnassigned !== true) {\n        const hasUnassigned = normalized_map.some((character)=>unassigned_code_points.get(character));\n        if (hasUnassigned) {\n            throw new Error(\"Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5\");\n        }\n    }\n    const hasBidiRAL = normalized_map.some((character)=>bidirectional_r_al.get(character));\n    const hasBidiL = normalized_map.some((character)=>bidirectional_l.get(character));\n    if (hasBidiRAL && hasBidiL) {\n        throw new Error(\"String must not contain RandALCat and LCat at the same time,\" + \" see https://tools.ietf.org/html/rfc3454#section-6\");\n    }\n    const isFirstBidiRAL = bidirectional_r_al.get(getCodePoint(first(normalized_input)));\n    const isLastBidiRAL = bidirectional_r_al.get(getCodePoint(last(normalized_input)));\n    if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n        throw new Error(\"Bidirectional RandALCat character must be the first and the last\" + \" character of the string, see https://tools.ietf.org/html/rfc3454#section-6\");\n    }\n    return normalized_input;\n}\nsaslprep.saslprep = saslprep;\nsaslprep.default = saslprep;\nmodule.exports = saslprep; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLE1BQU1BLGVBQWUsQ0FBQ0MsWUFBY0EsVUFBVUMsV0FBVyxDQUFDO0FBQzFELE1BQU1DLFFBQVEsQ0FBQ0MsSUFBTUEsQ0FBQyxDQUFDLEVBQUU7QUFDekIsTUFBTUMsT0FBTyxDQUFDRCxJQUFNQSxDQUFDLENBQUNBLEVBQUVFLE1BQU0sR0FBRyxFQUFFO0FBQ25DLFNBQVNDLGFBQWFDLEtBQUs7SUFDdkIsTUFBTUMsYUFBYSxFQUFFO0lBQ3JCLE1BQU1DLE9BQU9GLE1BQU1GLE1BQU07SUFDekIsSUFBSyxJQUFJSyxJQUFJLEdBQUdBLElBQUlELE1BQU1DLEtBQUssRUFBRztRQUM5QixNQUFNQyxTQUFTSixNQUFNSyxVQUFVLENBQUNGO1FBQ2hDLElBQUlDLFVBQVUsVUFBVUEsVUFBVSxVQUFVRixPQUFPQyxJQUFJLEdBQUc7WUFDdEQsTUFBTUcsT0FBT04sTUFBTUssVUFBVSxDQUFDRixJQUFJO1lBQ2xDLElBQUlHLFFBQVEsVUFBVUEsUUFBUSxRQUFRO2dCQUNsQ0wsV0FBV00sSUFBSSxDQUFDLENBQUNILFNBQVMsTUFBSyxJQUFLLFFBQVFFLE9BQU8sU0FBUztnQkFDNURILEtBQUs7Z0JBQ0w7WUFDSjtRQUNKO1FBQ0FGLFdBQVdNLElBQUksQ0FBQ0g7SUFDcEI7SUFDQSxPQUFPSDtBQUNYO0FBQ0EsU0FBU08sU0FBUyxFQUFFQyxzQkFBc0IsRUFBRUMsMEJBQTBCLEVBQUVDLDBCQUEwQixFQUFFQyxxQkFBcUIsRUFBRUMsa0JBQWtCLEVBQUVDLGVBQWUsRUFBRyxFQUFFZCxLQUFLLEVBQUVlLE9BQU8sQ0FBQyxDQUFDO0lBQy9LLE1BQU1DLGdCQUFnQkw7SUFDdEIsTUFBTU0sa0JBQWtCUDtJQUN4QixJQUFJLE9BQU9WLFVBQVUsVUFBVTtRQUMzQixNQUFNLElBQUlrQixVQUFVO0lBQ3hCO0lBQ0EsSUFBSWxCLE1BQU1GLE1BQU0sS0FBSyxHQUFHO1FBQ3BCLE9BQU87SUFDWDtJQUNBLE1BQU1xQixlQUFlcEIsYUFBYUMsT0FDN0JvQixHQUFHLENBQUMsQ0FBQzNCLFlBQWV1QixjQUFjSyxHQUFHLENBQUM1QixhQUFhLE9BQU9BLFdBQzFENkIsTUFBTSxDQUFDLENBQUM3QixZQUFjLENBQUN3QixnQkFBZ0JJLEdBQUcsQ0FBQzVCO0lBQ2hELE1BQU04QixtQkFBbUJDLE9BQU9DLGFBQWEsQ0FDeENDLEtBQUssQ0FBQyxNQUFNUCxjQUNaUSxTQUFTLENBQUM7SUFDZixNQUFNQyxpQkFBaUI3QixhQUFhd0I7SUFDcEMsTUFBTU0sZ0JBQWdCRCxlQUFlRSxJQUFJLENBQUMsQ0FBQ3JDLFlBQWNtQixzQkFBc0JTLEdBQUcsQ0FBQzVCO0lBQ25GLElBQUlvQyxlQUFlO1FBQ2YsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsSUFBSWhCLEtBQUtpQixlQUFlLEtBQUssTUFBTTtRQUMvQixNQUFNQyxnQkFBZ0JMLGVBQWVFLElBQUksQ0FBQyxDQUFDckMsWUFBY2dCLHVCQUF1QlksR0FBRyxDQUFDNUI7UUFDcEYsSUFBSXdDLGVBQWU7WUFDZixNQUFNLElBQUlGLE1BQU07UUFDcEI7SUFDSjtJQUNBLE1BQU1HLGFBQWFOLGVBQWVFLElBQUksQ0FBQyxDQUFDckMsWUFBY29CLG1CQUFtQlEsR0FBRyxDQUFDNUI7SUFDN0UsTUFBTTBDLFdBQVdQLGVBQWVFLElBQUksQ0FBQyxDQUFDckMsWUFBY3FCLGdCQUFnQk8sR0FBRyxDQUFDNUI7SUFDeEUsSUFBSXlDLGNBQWNDLFVBQVU7UUFDeEIsTUFBTSxJQUFJSixNQUFNLGlFQUNaO0lBQ1I7SUFDQSxNQUFNSyxpQkFBaUJ2QixtQkFBbUJRLEdBQUcsQ0FBQzdCLGFBQWFHLE1BQU00QjtJQUNqRSxNQUFNYyxnQkFBZ0J4QixtQkFBbUJRLEdBQUcsQ0FBQzdCLGFBQWFLLEtBQUswQjtJQUMvRCxJQUFJVyxjQUFjLENBQUVFLENBQUFBLGtCQUFrQkMsYUFBWSxHQUFJO1FBQ2xELE1BQU0sSUFBSU4sTUFBTSxxRUFDWjtJQUNSO0lBQ0EsT0FBT1I7QUFDWDtBQUNBZixTQUFTQSxRQUFRLEdBQUdBO0FBQ3BCQSxTQUFTOEIsT0FBTyxHQUFHOUI7QUFDbkIrQixPQUFPQyxPQUFPLEdBQUdoQyxVQUNqQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWJsb2cvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9pbmRleC5qcz9jYzAxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgZ2V0Q29kZVBvaW50ID0gKGNoYXJhY3RlcikgPT4gY2hhcmFjdGVyLmNvZGVQb2ludEF0KDApO1xuY29uc3QgZmlyc3QgPSAoeCkgPT4geFswXTtcbmNvbnN0IGxhc3QgPSAoeCkgPT4geFt4Lmxlbmd0aCAtIDFdO1xuZnVuY3Rpb24gdG9Db2RlUG9pbnRzKGlucHV0KSB7XG4gICAgY29uc3QgY29kZXBvaW50cyA9IFtdO1xuICAgIGNvbnN0IHNpemUgPSBpbnB1dC5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3QgYmVmb3JlID0gaW5wdXQuY2hhckNvZGVBdChpKTtcbiAgICAgICAgaWYgKGJlZm9yZSA+PSAweGQ4MDAgJiYgYmVmb3JlIDw9IDB4ZGJmZiAmJiBzaXplID4gaSArIDEpIHtcbiAgICAgICAgICAgIGNvbnN0IG5leHQgPSBpbnB1dC5jaGFyQ29kZUF0KGkgKyAxKTtcbiAgICAgICAgICAgIGlmIChuZXh0ID49IDB4ZGMwMCAmJiBuZXh0IDw9IDB4ZGZmZikge1xuICAgICAgICAgICAgICAgIGNvZGVwb2ludHMucHVzaCgoYmVmb3JlIC0gMHhkODAwKSAqIDB4NDAwICsgbmV4dCAtIDB4ZGMwMCArIDB4MTAwMDApO1xuICAgICAgICAgICAgICAgIGkgKz0gMTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb2RlcG9pbnRzLnB1c2goYmVmb3JlKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvZGVwb2ludHM7XG59XG5mdW5jdGlvbiBzYXNscHJlcCh7IHVuYXNzaWduZWRfY29kZV9wb2ludHMsIGNvbW1vbmx5X21hcHBlZF90b19ub3RoaW5nLCBub25fQVNDSUlfc3BhY2VfY2hhcmFjdGVycywgcHJvaGliaXRlZF9jaGFyYWN0ZXJzLCBiaWRpcmVjdGlvbmFsX3JfYWwsIGJpZGlyZWN0aW9uYWxfbCwgfSwgaW5wdXQsIG9wdHMgPSB7fSkge1xuICAgIGNvbnN0IG1hcHBpbmcyc3BhY2UgPSBub25fQVNDSUlfc3BhY2VfY2hhcmFjdGVycztcbiAgICBjb25zdCBtYXBwaW5nMm5vdGhpbmcgPSBjb21tb25seV9tYXBwZWRfdG9fbm90aGluZztcbiAgICBpZiAodHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBzdHJpbmcuJyk7XG4gICAgfVxuICAgIGlmIChpbnB1dC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICBjb25zdCBtYXBwZWRfaW5wdXQgPSB0b0NvZGVQb2ludHMoaW5wdXQpXG4gICAgICAgIC5tYXAoKGNoYXJhY3RlcikgPT4gKG1hcHBpbmcyc3BhY2UuZ2V0KGNoYXJhY3RlcikgPyAweDIwIDogY2hhcmFjdGVyKSlcbiAgICAgICAgLmZpbHRlcigoY2hhcmFjdGVyKSA9PiAhbWFwcGluZzJub3RoaW5nLmdldChjaGFyYWN0ZXIpKTtcbiAgICBjb25zdCBub3JtYWxpemVkX2lucHV0ID0gU3RyaW5nLmZyb21Db2RlUG9pbnRcbiAgICAgICAgLmFwcGx5KG51bGwsIG1hcHBlZF9pbnB1dClcbiAgICAgICAgLm5vcm1hbGl6ZSgnTkZLQycpO1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRfbWFwID0gdG9Db2RlUG9pbnRzKG5vcm1hbGl6ZWRfaW5wdXQpO1xuICAgIGNvbnN0IGhhc1Byb2hpYml0ZWQgPSBub3JtYWxpemVkX21hcC5zb21lKChjaGFyYWN0ZXIpID0+IHByb2hpYml0ZWRfY2hhcmFjdGVycy5nZXQoY2hhcmFjdGVyKSk7XG4gICAgaWYgKGhhc1Byb2hpYml0ZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQcm9oaWJpdGVkIGNoYXJhY3Rlciwgc2VlIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM0MDEzI3NlY3Rpb24tMi4zJyk7XG4gICAgfVxuICAgIGlmIChvcHRzLmFsbG93VW5hc3NpZ25lZCAhPT0gdHJ1ZSkge1xuICAgICAgICBjb25zdCBoYXNVbmFzc2lnbmVkID0gbm9ybWFsaXplZF9tYXAuc29tZSgoY2hhcmFjdGVyKSA9PiB1bmFzc2lnbmVkX2NvZGVfcG9pbnRzLmdldChjaGFyYWN0ZXIpKTtcbiAgICAgICAgaWYgKGhhc1VuYXNzaWduZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5hc3NpZ25lZCBjb2RlIHBvaW50LCBzZWUgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzQwMTMjc2VjdGlvbi0yLjUnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBoYXNCaWRpUkFMID0gbm9ybWFsaXplZF9tYXAuc29tZSgoY2hhcmFjdGVyKSA9PiBiaWRpcmVjdGlvbmFsX3JfYWwuZ2V0KGNoYXJhY3RlcikpO1xuICAgIGNvbnN0IGhhc0JpZGlMID0gbm9ybWFsaXplZF9tYXAuc29tZSgoY2hhcmFjdGVyKSA9PiBiaWRpcmVjdGlvbmFsX2wuZ2V0KGNoYXJhY3RlcikpO1xuICAgIGlmIChoYXNCaWRpUkFMICYmIGhhc0JpZGlMKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignU3RyaW5nIG11c3Qgbm90IGNvbnRhaW4gUmFuZEFMQ2F0IGFuZCBMQ2F0IGF0IHRoZSBzYW1lIHRpbWUsJyArXG4gICAgICAgICAgICAnIHNlZSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzQ1NCNzZWN0aW9uLTYnKTtcbiAgICB9XG4gICAgY29uc3QgaXNGaXJzdEJpZGlSQUwgPSBiaWRpcmVjdGlvbmFsX3JfYWwuZ2V0KGdldENvZGVQb2ludChmaXJzdChub3JtYWxpemVkX2lucHV0KSkpO1xuICAgIGNvbnN0IGlzTGFzdEJpZGlSQUwgPSBiaWRpcmVjdGlvbmFsX3JfYWwuZ2V0KGdldENvZGVQb2ludChsYXN0KG5vcm1hbGl6ZWRfaW5wdXQpKSk7XG4gICAgaWYgKGhhc0JpZGlSQUwgJiYgIShpc0ZpcnN0QmlkaVJBTCAmJiBpc0xhc3RCaWRpUkFMKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0JpZGlyZWN0aW9uYWwgUmFuZEFMQ2F0IGNoYXJhY3RlciBtdXN0IGJlIHRoZSBmaXJzdCBhbmQgdGhlIGxhc3QnICtcbiAgICAgICAgICAgICcgY2hhcmFjdGVyIG9mIHRoZSBzdHJpbmcsIHNlZSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzQ1NCNzZWN0aW9uLTYnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5vcm1hbGl6ZWRfaW5wdXQ7XG59XG5zYXNscHJlcC5zYXNscHJlcCA9IHNhc2xwcmVwO1xuc2FzbHByZXAuZGVmYXVsdCA9IHNhc2xwcmVwO1xubW9kdWxlLmV4cG9ydHMgPSBzYXNscHJlcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRDb2RlUG9pbnQiLCJjaGFyYWN0ZXIiLCJjb2RlUG9pbnRBdCIsImZpcnN0IiwieCIsImxhc3QiLCJsZW5ndGgiLCJ0b0NvZGVQb2ludHMiLCJpbnB1dCIsImNvZGVwb2ludHMiLCJzaXplIiwiaSIsImJlZm9yZSIsImNoYXJDb2RlQXQiLCJuZXh0IiwicHVzaCIsInNhc2xwcmVwIiwidW5hc3NpZ25lZF9jb2RlX3BvaW50cyIsImNvbW1vbmx5X21hcHBlZF90b19ub3RoaW5nIiwibm9uX0FTQ0lJX3NwYWNlX2NoYXJhY3RlcnMiLCJwcm9oaWJpdGVkX2NoYXJhY3RlcnMiLCJiaWRpcmVjdGlvbmFsX3JfYWwiLCJiaWRpcmVjdGlvbmFsX2wiLCJvcHRzIiwibWFwcGluZzJzcGFjZSIsIm1hcHBpbmcybm90aGluZyIsIlR5cGVFcnJvciIsIm1hcHBlZF9pbnB1dCIsIm1hcCIsImdldCIsImZpbHRlciIsIm5vcm1hbGl6ZWRfaW5wdXQiLCJTdHJpbmciLCJmcm9tQ29kZVBvaW50IiwiYXBwbHkiLCJub3JtYWxpemUiLCJub3JtYWxpemVkX21hcCIsImhhc1Byb2hpYml0ZWQiLCJzb21lIiwiRXJyb3IiLCJhbGxvd1VuYXNzaWduZWQiLCJoYXNVbmFzc2lnbmVkIiwiaGFzQmlkaVJBTCIsImhhc0JpZGlMIiwiaXNGaXJzdEJpZGlSQUwiLCJpc0xhc3RCaWRpUkFMIiwiZGVmYXVsdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createMemoryCodePoints = void 0;\nconst sparse_bitfield_1 = __importDefault(__webpack_require__(/*! sparse-bitfield */ \"(ssr)/./node_modules/sparse-bitfield/index.js\"));\nfunction createMemoryCodePoints(data) {\n    let offset = 0;\n    function read() {\n        const size = data.readUInt32BE(offset);\n        offset += 4;\n        const codepoints = data.slice(offset, offset + size);\n        offset += size;\n        return (0, sparse_bitfield_1.default)({\n            buffer: codepoints\n        });\n    }\n    const unassigned_code_points = read();\n    const commonly_mapped_to_nothing = read();\n    const non_ASCII_space_characters = read();\n    const prohibited_characters = read();\n    const bidirectional_r_al = read();\n    const bidirectional_l = read();\n    return {\n        unassigned_code_points,\n        commonly_mapped_to_nothing,\n        non_ASCII_space_characters,\n        prohibited_characters,\n        bidirectional_r_al,\n        bidirectional_l\n    };\n}\nexports.createMemoryCodePoints = createMemoryCodePoints; //# sourceMappingURL=memory-code-points.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9tZW1vcnktY29kZS1wb2ludHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQUssU0FBVUMsR0FBRztJQUNqRSxPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFLFdBQVdBO0lBQUk7QUFDNUQ7QUFDQUUsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDhCQUE4QixHQUFHLEtBQUs7QUFDdEMsTUFBTUcsb0JBQW9CUixnQkFBZ0JTLG1CQUFPQSxDQUFDLHNFQUFpQjtBQUNuRSxTQUFTRix1QkFBdUJHLElBQUk7SUFDaEMsSUFBSUMsU0FBUztJQUNiLFNBQVNDO1FBQ0wsTUFBTUMsT0FBT0gsS0FBS0ksWUFBWSxDQUFDSDtRQUMvQkEsVUFBVTtRQUNWLE1BQU1JLGFBQWFMLEtBQUtNLEtBQUssQ0FBQ0wsUUFBUUEsU0FBU0U7UUFDL0NGLFVBQVVFO1FBQ1YsT0FBTyxDQUFDLEdBQUdMLGtCQUFrQlMsT0FBTyxFQUFFO1lBQUVDLFFBQVFIO1FBQVc7SUFDL0Q7SUFDQSxNQUFNSSx5QkFBeUJQO0lBQy9CLE1BQU1RLDZCQUE2QlI7SUFDbkMsTUFBTVMsNkJBQTZCVDtJQUNuQyxNQUFNVSx3QkFBd0JWO0lBQzlCLE1BQU1XLHFCQUFxQlg7SUFDM0IsTUFBTVksa0JBQWtCWjtJQUN4QixPQUFPO1FBQ0hPO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO0lBQ0o7QUFDSjtBQUNBbkIsOEJBQThCLEdBQUdFLHdCQUNqQyw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0LWJsb2cvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9tZW1vcnktY29kZS1wb2ludHMuanM/OGNjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlTWVtb3J5Q29kZVBvaW50cyA9IHZvaWQgMDtcbmNvbnN0IHNwYXJzZV9iaXRmaWVsZF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzcGFyc2UtYml0ZmllbGRcIikpO1xuZnVuY3Rpb24gY3JlYXRlTWVtb3J5Q29kZVBvaW50cyhkYXRhKSB7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgZnVuY3Rpb24gcmVhZCgpIHtcbiAgICAgICAgY29uc3Qgc2l6ZSA9IGRhdGEucmVhZFVJbnQzMkJFKG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSA0O1xuICAgICAgICBjb25zdCBjb2RlcG9pbnRzID0gZGF0YS5zbGljZShvZmZzZXQsIG9mZnNldCArIHNpemUpO1xuICAgICAgICBvZmZzZXQgKz0gc2l6ZTtcbiAgICAgICAgcmV0dXJuICgwLCBzcGFyc2VfYml0ZmllbGRfMS5kZWZhdWx0KSh7IGJ1ZmZlcjogY29kZXBvaW50cyB9KTtcbiAgICB9XG4gICAgY29uc3QgdW5hc3NpZ25lZF9jb2RlX3BvaW50cyA9IHJlYWQoKTtcbiAgICBjb25zdCBjb21tb25seV9tYXBwZWRfdG9fbm90aGluZyA9IHJlYWQoKTtcbiAgICBjb25zdCBub25fQVNDSUlfc3BhY2VfY2hhcmFjdGVycyA9IHJlYWQoKTtcbiAgICBjb25zdCBwcm9oaWJpdGVkX2NoYXJhY3RlcnMgPSByZWFkKCk7XG4gICAgY29uc3QgYmlkaXJlY3Rpb25hbF9yX2FsID0gcmVhZCgpO1xuICAgIGNvbnN0IGJpZGlyZWN0aW9uYWxfbCA9IHJlYWQoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICB1bmFzc2lnbmVkX2NvZGVfcG9pbnRzLFxuICAgICAgICBjb21tb25seV9tYXBwZWRfdG9fbm90aGluZyxcbiAgICAgICAgbm9uX0FTQ0lJX3NwYWNlX2NoYXJhY3RlcnMsXG4gICAgICAgIHByb2hpYml0ZWRfY2hhcmFjdGVycyxcbiAgICAgICAgYmlkaXJlY3Rpb25hbF9yX2FsLFxuICAgICAgICBiaWRpcmVjdGlvbmFsX2wsXG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlTWVtb3J5Q29kZVBvaW50cyA9IGNyZWF0ZU1lbW9yeUNvZGVQb2ludHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZW1vcnktY29kZS1wb2ludHMuanMubWFwIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyZWF0ZU1lbW9yeUNvZGVQb2ludHMiLCJzcGFyc2VfYml0ZmllbGRfMSIsInJlcXVpcmUiLCJkYXRhIiwib2Zmc2V0IiwicmVhZCIsInNpemUiLCJyZWFkVUludDMyQkUiLCJjb2RlcG9pbnRzIiwic2xpY2UiLCJkZWZhdWx0IiwiYnVmZmVyIiwidW5hc3NpZ25lZF9jb2RlX3BvaW50cyIsImNvbW1vbmx5X21hcHBlZF90b19ub3RoaW5nIiwibm9uX0FTQ0lJX3NwYWNlX2NoYXJhY3RlcnMiLCJwcm9oaWJpdGVkX2NoYXJhY3RlcnMiLCJiaWRpcmVjdGlvbmFsX3JfYWwiLCJiaWRpcmVjdGlvbmFsX2wiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mongodb-js/saslprep/dist/node.js":
/*!********************************************************!*\
  !*** ./node_modules/@mongodb-js/saslprep/dist/node.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nconst index_1 = __importDefault(__webpack_require__(/*! ./index */ \"(ssr)/./node_modules/@mongodb-js/saslprep/dist/index.js\"));\nconst memory_code_points_1 = __webpack_require__(/*! ./memory-code-points */ \"(ssr)/./node_modules/@mongodb-js/saslprep/dist/memory-code-points.js\");\nconst code_points_data_1 = __importDefault(__webpack_require__(/*! ./code-points-data */ \"(ssr)/./node_modules/@mongodb-js/saslprep/dist/code-points-data.js\"));\nconst codePoints = (0, memory_code_points_1.createMemoryCodePoints)(code_points_data_1.default);\nconst saslprep = index_1.default.bind(null, codePoints);\nObject.assign(saslprep, {\n    saslprep,\n    default: saslprep\n});\nmodule.exports = saslprep; //# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1vbmdvZGItanMvc2FzbHByZXAvZGlzdC9ub2RlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0EsTUFBTUUsVUFBVUgsZ0JBQWdCSSxtQkFBT0EsQ0FBQyx3RUFBUztBQUNqRCxNQUFNQyx1QkFBdUJELG1CQUFPQSxDQUFDLGtHQUFzQjtBQUMzRCxNQUFNRSxxQkFBcUJOLGdCQUFnQkksbUJBQU9BLENBQUMsOEZBQW9CO0FBQ3ZFLE1BQU1HLGFBQWEsQ0FBQyxHQUFHRixxQkFBcUJHLHNCQUFzQixFQUFFRixtQkFBbUJHLE9BQU87QUFDOUYsTUFBTUMsV0FBV1AsUUFBUU0sT0FBTyxDQUFDRSxJQUFJLENBQUMsTUFBTUo7QUFDNUNLLE9BQU9DLE1BQU0sQ0FBQ0gsVUFBVTtJQUFFQTtJQUFVRCxTQUFTQztBQUFTO0FBQ3RESSxPQUFPQyxPQUFPLEdBQUdMLFVBQ2pCLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYmxvZy8uL25vZGVfbW9kdWxlcy9AbW9uZ29kYi1qcy9zYXNscHJlcC9kaXN0L25vZGUuanM/MjM3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbmNvbnN0IGluZGV4XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vaW5kZXhcIikpO1xuY29uc3QgbWVtb3J5X2NvZGVfcG9pbnRzXzEgPSByZXF1aXJlKFwiLi9tZW1vcnktY29kZS1wb2ludHNcIik7XG5jb25zdCBjb2RlX3BvaW50c19kYXRhXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY29kZS1wb2ludHMtZGF0YVwiKSk7XG5jb25zdCBjb2RlUG9pbnRzID0gKDAsIG1lbW9yeV9jb2RlX3BvaW50c18xLmNyZWF0ZU1lbW9yeUNvZGVQb2ludHMpKGNvZGVfcG9pbnRzX2RhdGFfMS5kZWZhdWx0KTtcbmNvbnN0IHNhc2xwcmVwID0gaW5kZXhfMS5kZWZhdWx0LmJpbmQobnVsbCwgY29kZVBvaW50cyk7XG5PYmplY3QuYXNzaWduKHNhc2xwcmVwLCB7IHNhc2xwcmVwLCBkZWZhdWx0OiBzYXNscHJlcCB9KTtcbm1vZHVsZS5leHBvcnRzID0gc2FzbHByZXA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiaW5kZXhfMSIsInJlcXVpcmUiLCJtZW1vcnlfY29kZV9wb2ludHNfMSIsImNvZGVfcG9pbnRzX2RhdGFfMSIsImNvZGVQb2ludHMiLCJjcmVhdGVNZW1vcnlDb2RlUG9pbnRzIiwiZGVmYXVsdCIsInNhc2xwcmVwIiwiYmluZCIsIk9iamVjdCIsImFzc2lnbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mongodb-js/saslprep/dist/node.js\n");

/***/ })

};
;